name: Test

on: [push, pull_request]

jobs:
  # Build the program
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build
      run: cargo build --verbose --release
    - uses: actions/upload-artifact@master
      with:
        name: binaries
        path: target/release/mcproxy
  # Test the program (after build)
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v1
    - name: Run tests
      run: cargo test --verbose -F schemars
    - uses: actions/upload-artifact@master
      with:
        name: config-schema
        path: target/schema
  # Lint the program (after build)
  clippy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v1
    - name: Run clippy
      run: cargo clippy --verbose
  # Check code formatting (after build)
  rustfmt:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true
    steps:
    - uses: actions/checkout@v1
    - name: Check Rust formatting
      run: cargo fmt -- --check
